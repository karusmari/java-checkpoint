package group1.DayOfWeekFinder;

import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class DayOfWeekFinder {
    public String findNextDayOfWeek(String startDate, String dayOfWeek) {
        try {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDate date = LocalDate.parse(startDate, formatter);

            DayOfWeek targetDay = DayOfWeek.valueOf(dayOfWeek.toUpperCase()); //peab suurteks tähtedeks muutma, sest dayofweek ootab kindlat formaati
            int startValue = date.getDayOfWeek().getValue(); //praeguse kuupäeva nädalapäev ja tema number vastavalt dayOfWeek väärtusele
            int targetValue = targetDay.getValue(); //soovitava päeva väärtus numbrites

            int daysToAdd = (targetValue - startValue + 7) % 7; //modulo mitte jagamine
            if (daysToAdd == 0) { //kui vastus on 0, siis on tegemist sama päevaga ning lisada 7
                daysToAdd = 7;
            }
            LocalDate nextDate = date.plusDays(daysToAdd); //uus muutuja nextDate kuhu lisan date kuupäevale need päevad, mis vastusest sain

            return nextDate.toString(); //prindime vastuse

        }
        catch (Exception e) {
            return "Error";
        }
    }
}

//DayOfWeek on enum ehk siis loetelu, kus on nädalapäevad suurtes tähtedes. Igal päeval on ka numbriline väärtus
//Ehk siis nt MONDAY.getValue() -> 1


// koigepealt loon muutujad formatter, mis võtab vastu kuupäeva formaadi
// siis loon muutuja date, mis võtab vastu startDate ja kindlas formaadis
// siis loon muutuja targetDay, mis võtab vastu dayOfWeek ja muudab selle suurteks tähtedeks, sest DayOfWeek enum on suurte tähtedega
// siis loon muutuja startValue, mis võtab vastu date muutuja nädalapäeva ja tema numbri (nt esmaspäev on 1)
// siis loon muutuja targetValue, mis võtab vastu targetDay numbri (numbrid on 1-7)
// siis loon muutuja daysToAdd, mis arvutab välja mitu päeva on vaja lisada, et jõuda soovitud nädalapäevani.
// arvutus tähendab, et võtan targetValue-st startValue, lisan 7 (et vältida negatiivset arvu) ja võtan tulemuse mod 7 (et saada järelejäänud päevad nädalas)
// kui daysToAdd on 0, siis tähendab see, et soovitud päev on täna, seega pean lisama 7 päeva, et saada järgmine sama päev järgmisel nädalal
// siis loon muutuja nextDate, mis võtab vastu date ja lisab sellele daysToAdd päeva
// lõpuks tagastan nextDate stringina
// kui tekib mingi error, siis tagastan "Error"